#define _CRT_SECURE_NO_WARNINGS

#include <stdio.h>

오름차순
#define SIZE 10
int main() {
	
 int list[SIZE] = { 3,2,9,7,1,4,8,0,6,5 };
 int i, j, temp, least;

 for (i = 0; i < SIZE - 1; i++) {
 least = i;
 for (j = i + 1; j < SIZE; j++)
 if (list[j] < list[least])
 least = j;
 //조건문을 이용하여 교환 필요없으면 안하도록 수정할 것

 if (i != least) {
 temp = list[i];
 list[i] = list[least];
 list[least] = temp;
 }
 }
 for (i = 0; i < SIZE; i++)
 printf("%d ", list[i]);
 printf('\n');

}

내림차순
int main() {

 int list[SIZE] = { 3,2,9,7,1,4,8,0,6,5 };
 int i, j, temp, least;

 for (i = 0; i < SIZE - 1; i++) {
 least = i;
 for (j = i + 1; j < SIZE; j++)
 if (list[j] > list[least])
 least = j;
 //조건문을 이용하여 교환 필요없으면 안하도록 수정할 것

 if (i != least) {
 temp = list[i];
 list[i] = list[least];
 list[least] = temp;
 }
 }
 for (i = 0; i < SIZE; i++)
 printf("%d ", list[i]);
 printf('\n');

}

427
int main() {

 int key, i;
 int list[SIZE] = { 0,1,2,3,4,5,6,7,8,9 };
 int found = 0;//1은 true,0은 false

 printf("탐색할 값 : ");
 scanf("%d", &key);
 for (i = 0; i < SIZE; i++)
 if (list[i] == key) {
 printf("탐색성공 인덱스 = %d\n", i);
 found = 1;
 }

 if (!found)
 printf("찾는 값이 없다.\n");

 printf("탐색종료\n");

}

429 list는 반드시 오름차순으로 정렬되어 있어야 함
#define SIZE 16
int main() {

 int key;
 int list[SIZE] = { 2,6,11,13,18,20,22,27,30,34,38,41,42,45,47 };

 printf("탐색할 값을 입력하시오 : ");
 scanf("%d", &key);

 int index=-1, found = 0; //index=-1 : 못찾았다
 int low, high, mid;

 low = 0;
 high = SIZE - 1;
 while (low <= high) {
 mid = (low + high) / 2;
 if (key == list[mid]) {
 index = mid;
 found = 1;
 break;
 }
 else if (key > list[mid])
 low = mid + 1;
 else high = mid - 1;

 }
 if (index != -1)
 printf("탐색성공 인덱스=%d\n", index);
 else
 printf("찾는 값이 없습니다.");
}


445(5)
0~9사이 난수 100번 생성
 0~9의 생성 회수 출력
가장 많이 생성된 수 무엇인지 출력
투표횟수는 100 후보자 0~9

#include <stdlib.h>

int main() {

	srand(time(0));
	int vote[10] = { 0 }, i;

	for (i = 0; i < 100; i++)
		vote[rand() % 10 + 1]++;
	for (i = 0; i < 10; i++)
		printf("%d %d", i, vote[i]);

	int

		for (round = 0; round <= 10; round++) {
		 num = rand() % 10 + 1;
		 printf("%d ", num);
		
		 for (i = 0; i <= 10; i++) {
		 if (num == i)
		 vote[i] += 1;
		 }
		}
		for (i = 0; i <= 10; i++) {
		 printf("%d", vote[i]);
		}

		printf("가장 많이 나온 수 : %d")
		
}

